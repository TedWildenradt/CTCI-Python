import collections

def minMalwareSpread(graph, initial):
    """
    :type graph: List[List[int]]
    :type initial: List[int]
    :rtype: int
    """
    initial.sort()
    hash = {}
    for node in initial:
        hash[node] = 0
        
    for node in initial:           
        queue = collections.deque()
        queue.append(node)
        visited = set()
        visited.add(node)
        while queue:
            curr = queue.popleft()
            for i in range(len(graph[curr])):
                if graph[curr][i] > 0 and curr != i:
                    if i not in visited:
                        hash[node] += 1
                        visited.add(i)
                        queue.append(i)
                        
    maxConnectedNode = initial[0]
    numberOfConnections = hash[initial[0]]
    
    for node in initial:
        if hash[node] > numberOfConnections:
            maxConnectedNode = node
            numberOfConnections = hash[node]
            
    return maxConnectedNode

graph = [[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,1,0,0,0],[0,0,0,1,1,0],[0,0,0,1,1,0],[0,0,0,0,0,1]]
initial = [5,0]
minMalwareSpread(graph, initial)